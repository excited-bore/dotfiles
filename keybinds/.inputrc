# Bash config
# https://www.topbug.net/blog/2017/07/31/inputrc-for-humans/
# This line carries over site-wide readline configuration to the user configuration. Usually /etc/inputrc includes some goodies.
$include /etc/inputrc

# Vi/emacs style editing shortcuts/interface
# https://unix.stackexchange.com/questions/303479/what-are-readlines-modes-keymaps-and-their-default-bindings
#set editing-mode vi

# Show whether it's normal or insert mode (@ - Change back with Alt-p)
set show-mode-in-prompt on

# You can set a different cursor shape for each mode by using "\1 .. \2" escapes: 
# Insert mode / Emacs mode have small cursor, command mode has block cursor
# Different cursor shapes escape sequences for virtual terminal
# https://wiki.archlinux.org/title/Readline
# Insert mode / Emacs mode are magenta, command mode is blue
# https://github.com/calid/bash
# 
$if term=linux
	#Version with color (insert - purple / command - blue)
        #set vi-ins-mode-string \1\e[35;1m\2(ins)\1\e[?0c\2\1\e[3m\2
	#set vi-cmd-mode-string \1\e[34;1m\2(cmd)\1\e[?8c\2\1\e[3m\2
	#set emacs-mode-string  \1\e[35;1m\2(emacs)\1\e[?0c\2\1\e[3m\2
        set vi-ins-mode-string (ins)\1\e[?0c\2\1\e[3m\2
	set vi-cmd-mode-string (cmd)\1\e[?8c\2\1\e[3m\2
	set emacs-mode-string  (emacs)\1\e[?0c\2\1\e[3m\2
$else
        #set vi-ins-mode-string \1\e[35;1m\2(ins)\1\e[5 q\2\1\e[3m\2
	#set vi-cmd-mode-string \1\e[34;1m\2(cmd)\1\e[2 q\2\1\e[3m\2
	#set emacs-mode-string  \1\e[35;1m\2(emacs)\1\e[5 q\2\1\e[3m\2
        set vi-ins-mode-string (ins)\1\e[5 q\2\1\e[3m\2
	set vi-cmd-mode-string (cmd)\1\e[2 q\2\1\e[3m\2
	set emacs-mode-string  (emacs)\1\e[5 q\2\1\e[3m\2
        
$endif


# https://stackoverflow.com/questions/67535351/how-to-provide-arguments-to-readline-functions-via-inputrc
set comment-begin #

#If you copy commands from the web, you might have noticed that when you copy a newline, Bash will interpret that newline as an Enter and execute whatever it is in your input buffer at the moment. This is unsafe, because what you see might not be what you copy. You can be avoided by setting:
set enable-bracketed-paste Off

 # Make sure we don't output everything on the 1 line
set horizontal-scroll-mode Off

# Enable 8bit input
set meta-flag On 
set input-meta On

# Turns off 8th bit stripping
set convert-meta Off

# Keep the 8th bit for display
set output-meta On

# none, visible or audible
set bell-style none

# This line sets every completion which is a symbolic link to a directory to have a slash appended.
set mark-symlinked-directories On

# No echoing of f.ex. ^C after pressing keys
# Leave this for C-v functionality
set echo-control-characters on

#Prevent altering history command when reusing it
#https://superuser.com/questions/302230/how-to-prevent-bash-from-altering-history
set revert-all-at-newline on

#This line sets 3 to be the maximum number of characters to be the common prefix to display for completions. 
#If the common prefix has more than 3 characters, they are replaced by ellipsis. For example, assume we are in a directory with files Screenshot_20170730.png and Screenshot_20170731.png. 
#If using the default option, an auto completion prints Screenshot_20170730.png Screenshot_20170731.png. If this option is set, then the auto completion prints ...0.png ...1.png. However, if the common prefix is very short (fewer or equal to 3 characters), the full file names are still printed. 
#For example, in a directory with files S10.png and S11.png, an auto completion still prints S10.png S11.png. 
#This can be very useful when auto completing in a directory in which a lot of files have a long common prefix, such a camera image directory.
#set completion-prefix-display-length 3

# Prevent the prompt 'Display all possibilities? (y/n)'
set completion-query-items 0
set page-completions off

# Ignore upper/lower cases, case-insensitive
set completion-ignore-case On

# This line sets the completions to be listed immediately instead of ringing the bell, when the completing word has more than one possible completion.
set show-all-if-ambiguous On

# This line sets the completions to be listed immediately instead of ringing the bell, when the completing word has more than one possible completion but no partial completion can be made
set show-all-if-unmodified on

# This line sets readline to display possible completions using different colors to indicate their file types. The colors are determined by the environmental variable LS_COLORS, which can be nicely configured.
set colored-stats On

# This lines sets completions to be appended by characters that indicate their file types reported by the stat system call
set visible-stats On

# Mark symlinked directories
set mark-symlinked-directories On
# Color the common prefix
set colored-completion-prefix On
# Color the common prefix in menu-complete
set menu-complete-display-prefix On

# Leave history instead of going back to empty line when browsing history
set history-preserve-point off

# aaa bbb ccc
# instead of
# a b c
# a b c
# a b c
#set print-completions-horizontally on

